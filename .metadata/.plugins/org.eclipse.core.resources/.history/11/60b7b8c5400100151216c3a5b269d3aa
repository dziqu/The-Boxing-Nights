package Inne;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.apache.commons.io.FileUtils;

import Enumy.EZnaki;
import Interfejsy.IIO;


public interface IO {

	public static <T> void drukuj(T s) { System.out.print(s); }
	
	public static <T> void drukuj(List<T> lista) { lista.forEach(System.out::print); }
	
	public static <T> void drukuj(File plik) {
		try { FileUtils.writeStringToFile(plik, ""); } catch (Exception ex) { ex.printStackTrace(); } }
	
	public static <T> void drukuj(File plik, T s) {
		try { FileUtils.writeStringToFile(plik, String.valueOf(s)); } catch (Exception ex) { ex.printStackTrace(); } }
	
	
	public static <T> void drukuj(File plik, List<T> lista) { 
		try { String linia = lista.stream().map(e -> String.valueOf(e)).reduce(pustyString, (a, e) -> a+e);
			drukuj(plik, linia); } catch (Exception ex) {ex.printStackTrace(); } }
	
	
	public static <T> void drukujL(T s) { System.out.println(s); }
	
	public static <T> void drukujL(List<T> lista) { lista.forEach(System.out::println); }
	
	public static <T> void drukujL(File plik, List<T> lista) { 
		String linia = lista.stream().map(e -> String.valueOf(e)).reduce(pustyString, (a, e) -> a+e+nowaLinia);
		drukuj(plik, linia); }
	
	
	@SuppressWarnings("finally")
	public static List<String> skanuj(File plik) { 
		List <String> lista = null;
		try { lista = FileUtils.readLines(plik); } 
		catch (IOException e) { e.printStackTrace(); } 
		finally { return lista; } }
	
	@SuppressWarnings("finally")
	public static String skanujS(File plik) {
		String linie = "";
		try { linie = FileUtils.readLines(plik).stream().map(e -> String.valueOf(e)).reduce(pustyString, (a, e) -> a+e); } 
		catch (IOException e) { e.printStackTrace(); } 
		finally { return linie; }
	}
	
	
	@SuppressWarnings("finally")
	public static String skanujSL(File plik) {
		String linie = "";
		try { linie = FileUtils.readLines(plik).stream().map(e -> String.valueOf(e)).reduce(pustyString, (a, e) -> a+e+nowaLinia); }
		catch (Exception e) {e.printStackTrace();}
		finally { return linie; } }
	
	public static Boolean istniejePlik(File plik) { return plik.exists(); }
	
	public static Boolean istniejePlik(String nazwa) {return new File(nazwa).exists(); }
	
	public static void edytuj(File plik, Integer numerWierszaDoEdycji, String nowaWartoúÊ) {
		List <String> lista = IO.skanuj(plik);
		lista.set(numerWierszaDoEdycji, nowaWartoúÊ);
		IO.drukujL(plik, lista); }
	
	public static String dopisz(String wiadomoúÊ, String tekstDoDopisania) {
		return wiadomoúÊ += tekstDoDopisania; }
	
	public static <T> List <T> dopisz(List<T> lista1, List<T> lista2) {
		List <T> listaèrÛd≥owa = lista1;
		List <T> listaDopisywana = lista2;
		listaDopisywana.forEach( s -> listaèrÛd≥owa.add(s) );
		return listaèrÛd≥owa; }
	
	/**
	 * Inicjuje obiekt.
	 * @param o obiekt
	 * @return obiekt
	 */
	public static <T> T inicjujObiekt(T o ) { return o; }
	
	public static final String pustyString = inicjujObiekt(EZnaki.PUSTY_STRING.zwrÛÊZnak());
	public static final String nowaLinia = inicjujObiekt(EZnaki.NOWA_LINIA.zwrÛÊZnak());

}
